<?xml version="1.0" ?>

<Node name="root" gravity="0 -9810 0" dt="0.01">
    <RequiredPlugin name="Sofa.Component.IO.Mesh"/> <!-- MeshGmshLoader -->
    <RequiredPlugin name="Sofa.Component.ODESolver.Backward"/> <!-- EulerImplicitSolver -->
    <RequiredPlugin name="Sofa.Component.LinearSolver.Iterative"/> <!-- CGLinearSolver -->
    <RequiredPlugin name="Sofa.Component.Topology.Container.Dynamic"/> <!-- TetrahedronSetTopologyContainer -->
    <RequiredPlugin name="MultiThreading"/> <!-- TetrahedronSetGeometryAlgorithms -->
    <RequiredPlugin name="Sofa.Component.StateContainer"/> <!-- MechanicalObject -->
    <RequiredPlugin name="Sofa.Component.SolidMechanics.FEM.Elastic"/> <!-- ParallelTetrahedronFEMForceField -->
    <RequiredPlugin name="Sofa.Component.Mass"/> <!-- UniformMass -->
    <RequiredPlugin name="Sofa.Component.MechanicalLoad"/> <!-- ConstantForceField -->
    <RequiredPlugin name="Sofa.Component.SceneUtility"/> <!-- InfoComponent (if needed for debugging) -->
    <RequiredPlugin name="Sofa.Component.Visual"/> <!-- Needed to use components [VisualStyle] -->  
    <RequiredPlugin name="SofaCUDA"/> <!-- Needed to use components [CUDA] -->
    <RequiredPlugin name="Sofa.Component.Topology.Container.Constant"/> <!-- Needed to use components [MeshTopology] -->  
    <RequiredPlugin name="Sofa.GL.Component.Rendering3D"/> <!-- Needed to use components [OglModel] -->  
    <RequiredPlugin name="Sofa.Component.Collision.Geometry"/> <!-- Needed to use components [TriangleCollisionModel] -->  
    <RequiredPlugin name="Sofa.Component.Constraint.Projective"/> <!-- Needed to use components [FixedProjectiveConstraint] -->  
    <RequiredPlugin name="Sofa.Component.Mapping.Linear"/> <!-- Needed to use components [BarycentricMapping] -->  
    <RequiredPlugin name="Sofa.Component.Collision.Detection.Algorithm"/> <!-- Needed to use components [BVHNarrowPhase,BruteForceBroadPhase,BruteForceDetection,CollisionPipeline] -->  
    <RequiredPlugin name="Sofa.Component.Collision.Response.Contact"/> <!-- Needed to use components [CollisionResponse] -->  
    <RequiredPlugin name="Sofa.Component.Collision.Detection.Intersection"/>
    <RequiredPlugin name="Sofa.Component.AnimationLoop"/> <!-- Needed to use components [FreeMotionAnimationLoop] -->  
    <RequiredPlugin name="Sofa.Component.Constraint.Lagrangian.Solver"/> 

    <!-- Load Gmsh .msh volume mesh -->
    <DefaultAnimationLoop name="defaultAnimationLoop" />
    <DefaultVisualManagerLoop name="defaultVisualManagerLoop" />
    <CollisionPipeline name="collisionPipeline" />
    <ParallelBruteForceBroadPhase name="broadPhase" />
    <ParallelBVHNarrowPhase name="narrowPhase" />
    <MinProximityIntersection name="intersection" alarmDistance=".5" contactDistance=".25"/>
    <DefaultContactManager name="contactManager" response="PenaltyContactForceField" />


    <Node name="WhiteMatter">
        <!-- Solvers -->
        <EulerImplicitSolver rayleighStiffness="0.1" rayleighMass="0.1" />
        <CGLinearSolver iterations="200" tolerance="1e-6" threshold="1e-6" />

        <!-- Topology + geometry -->
        <MeshGmshLoader name="meshLoader" filename="brain.msh" rotation="0 0 0"/>
        <TetrahedronSetTopologyContainer name="topo" src="@meshLoader" />
        <TetrahedronSetGeometryAlgorithms template="Vec3d" name="GeomAlgo" />
        <MechanicalObject template="Vec3d" name="MechanicalModel" showObject="1" />

        <!--Material -->
        <ParallelTetrahedronFEMForceField name="FEM" youngModulus="1200" poissonRatio="0.495" mstate="@MechanicalModel"/>

        <MeshSTLLoader name="surfaceLoader" filename="white_matter_centered.stl" rotation="0 0 0" />
        <!-- Mass and external force -->
        <UniformMass name="mass" totalMass="1.3" />
        <Node name="VisualSurface">
            <MeshTopology src="@../surfaceLoader" />
            <OglModel name="OglModel" src="@../surfaceLoader" color="1.0 0.6 0.8" />
            <BarycentricMapping input="@../MechanicalModel" output="@OglModel" template="Vec3d,Vec3d" />
        </Node>

        <Node name="CollisionModel">
            <MeshTopology src="@../surfaceLoader" />
            <MechanicalObject name="BrainCollisionMO"/>
            <TriangleCollisionModel name="collisionModel" contactStiffness="1.0"/>
            <BarycentricMapping input="@../MechanicalModel" output="@BrainCollisionMO" template="Vec3d,Vec3d"/>
        </Node>
    </Node>


    <Node name="Skull">
        <MeshSTLLoader name="skullLoader" filename="../skull/inner_skull_centered.stl" rotation="0 0 0"/>
        <!-- Solvers -->
        <MeshTopology name="MeshToTopology" src="@skullLoader" />

        <MechanicalObject template="Vec3d" name="MechanicalModel" showObject="1"/>

        <Node name="CollisionModel">
            <MeshTopology src="@../skullLoader" />
            <MechanicalObject name="SkullCollisionMO"/>
            <TriangleCollisionModel name="CollisionModel" contactStiffness="1.0"/>
            <BarycentricMapping input="@../MechanicalModel" output="@SkullCollisionMO" template="Vec3d,Vec3d"/>
        </Node>
        

        <!-- Mass and external force -->
        <!-- <UniformMass name="mass" totalMass="10" />
        <FixedProjectiveConstraint indices="0 1 2 3 4 5 6 7 8 9" />
        <Node name="VisualSurface">
            <MeshTopology src="@../skullLoader"/>
            <OglModel name="OglModel" src="@../skullLoader" color="0.8 0.8 0.8"/>
            <BarycentricMapping input="@MechanicalModel" output="@OglModel"/>
        </Node> -->
    </Node>


</Node>
